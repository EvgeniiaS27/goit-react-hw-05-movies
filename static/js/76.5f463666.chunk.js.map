{"version":3,"file":"static/js/76.5f463666.chunk.js","mappings":"kOACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAwF,wBAAxF,EAA2H,uB,SC6D3H,EAxDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXI,EAAAA,EAAAA,IAAaV,GACVW,MAAK,SAAAC,GACJ,OAAmB,MAAfA,EAAIC,OACCC,QAAQC,OAAO,IAAIC,MAAJ,kCACVJ,EAAIK,MACnB,IACAN,MAAK,SAAAO,GACJ,OAAoB,IAAhBA,EAAKC,OACAf,EAAQc,EAAKf,MAEbW,QAAQC,OACb,IAAIC,MAAJ,kDAEL,IACAI,OAAM,SAAAb,GAAK,OAAIC,EAASD,EAAb,IACXc,SAAQ,kBAAMf,GAAW,EAAjB,GACZ,GAAE,CAACN,KAGF,2BACGO,IAAS,wBAAKA,EAAMe,UACpBjB,IAAW,SAACkB,EAAA,EAAD,KAEZ,eAAIC,UAAWC,EAAf,SACGtB,EAAKuB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC1C,OACE,gBAAIN,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXM,IACEJ,EAAY,yCAC0BA,GAD1B,sCAIdK,IAAKH,EACLI,MAAM,SAER,iBAAKT,UAAWC,EAAhB,WACE,wBAAKI,KACL,yBAAG,cAAYD,UAbeE,EAiBrC,QAIR,C,uJC7DD,IAAMI,EAAW,+BACXC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,GACxD,EAEYG,EAAmB,SAAAtC,GAC9B,OAAOqC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBlC,EAAtB,oBAAyCmC,GACtD,EAEYzB,EAAe,SAAAV,GAC1B,OAAOqC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBlC,EAAtB,4BAAiDmC,GAC9D,EAEYI,EAAkB,SAAAvC,GAC7B,OAAOqC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBlC,EAAtB,4BAAiDmC,GAC9D,EAEYK,EAAkB,SAAAC,GAC7B,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,+BAAmCO,EAAnC,oBAAoDN,GACjE,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"itemList\":\"Cast_itemList__mSijY\",\"itemImage\":\"Cast_itemImage__RDMgi\",\"itemInfo\":\"Cast_itemInfo__fCNwn\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/getMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieCast(movieId)\n      .then(res => {\n        if (res.status !== 200) {\n          return Promise.reject(new Error(`Oops, something went wrong...`));\n        } else return res.json();\n      })\n      .then(data => {\n        if (data.length !== 0) {\n          return setCast(data.cast);\n        } else\n          return Promise.reject(\n            new Error(`Oops, something went wrong... Please try again`)\n          );\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <h1>{error.message}</h1>}\n      {loading && <Loader />}\n\n      <ul className={css.list}>\n        {cast.map(({ profile_path, character, name, id }) => {\n          return (\n            <li className={css.itemList} key={id}>\n              <img\n                className={css.itemImage}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : `https://via.placeholder.com/200x300`\n                }\n                alt={name}\n                width=\"200\"\n              />\n              <div className={css.itemInfo}>\n                <h4>{name}</h4>\n                <p>Character: {character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a6c1c08257b05a7c4692b093cbf34e';\n\nexport const getTrendingMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetailes = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getSearchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`);\n};\n"],"names":["movieId","useParams","useState","cast","setCast","loading","setLoading","error","setError","useEffect","getMovieCast","then","res","status","Promise","reject","Error","json","data","length","catch","finally","message","Loader","className","css","map","profile_path","character","name","id","src","alt","width","BASE_URL","API_KEY","getTrendingMovies","fetch","getMovieDetailes","getMovieReviews","getSearchMovies","query"],"sourceRoot":""}