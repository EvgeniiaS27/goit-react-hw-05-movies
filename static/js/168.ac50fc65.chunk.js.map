{"version":3,"file":"static/js/168.ac50fc65.chunk.js","mappings":"oOACA,EAAuB,sBAAvB,EAAwD,0B,SCkDxD,EA7CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXI,EAAAA,EAAAA,IAAgBV,GACbW,MAAK,SAAAC,GACJ,OAAmB,MAAfA,EAAIC,OACCC,QAAQC,OAAO,IAAIC,MAAJ,kCACVJ,EAAIK,MACnB,IACAN,MAAK,SAAAO,GACJ,OAAoB,IAAhBA,EAAKC,OACAf,EAAWc,EAAKE,SAEhBN,QAAQC,OACb,IAAIC,MAAJ,kDAEL,IACAK,OAAM,SAAAd,GAAK,OAAIC,EAASD,EAAb,IACXe,SAAQ,kBAAMhB,GAAW,EAAjB,GACZ,GAAE,CAACN,KAGF,2BACGO,IAAS,wBAAKA,EAAMgB,UACpBlB,IAAW,SAACmB,EAAA,EAAD,KACZ,eAAIC,UAAWC,EAAf,SACsB,IAAnBvB,EAAQgB,OACL,0CACAhB,EAAQwB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC9B,OACE,gBAAIL,UAAWC,EAAf,WACE,0BAAI,WAASE,MACb,uBAAIC,MAF4BC,EAKrC,QAIZ,C,uJClDD,IAAMC,EAAW,+BACXC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,GACxD,EAEYG,EAAmB,SAAAnC,GAC9B,OAAOkC,MAAM,GAAD,OAAIH,EAAJ,kBAAsB/B,EAAtB,oBAAyCgC,GACtD,EAEYI,EAAe,SAAApC,GAC1B,OAAOkC,MAAM,GAAD,OAAIH,EAAJ,kBAAsB/B,EAAtB,4BAAiDgC,GAC9D,EAEYtB,EAAkB,SAAAV,GAC7B,OAAOkC,MAAM,GAAD,OAAIH,EAAJ,kBAAsB/B,EAAtB,4BAAiDgC,GAC9D,EAEYK,EAAkB,SAAAC,GAC7B,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,+BAAmCO,EAAnC,oBAAoDN,GACjE,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"itemList\":\"Reviews_itemList__SmW54\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/getMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieReviews(movieId)\n      .then(res => {\n        if (res.status !== 200) {\n          return Promise.reject(new Error(`Oops, something went wrong...`));\n        } else return res.json();\n      })\n      .then(data => {\n        if (data.length !== 0) {\n          return setReviews(data.results);\n        } else\n          return Promise.reject(\n            new Error(`Oops, something went wrong... Please try again`)\n          );\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <h1>{error.message}</h1>}\n      {loading && <Loader />}\n      <ul className={css.list}>\n        {reviews.length === 0\n          ? 'We don`t have any reviews for his movie'\n          : reviews.map(({ author, content, id }) => {\n              return (\n                <li className={css.itemList} key={id}>\n                  <h3>Author: {author}</h3>\n                  <p>{content}</p>\n                </li>\n              );\n            })}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a6c1c08257b05a7c4692b093cbf34e';\n\nexport const getTrendingMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetailes = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getSearchMovies = query => {\n  return fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`);\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","useEffect","getMovieReviews","then","res","status","Promise","reject","Error","json","data","length","results","catch","finally","message","Loader","className","css","map","author","content","id","BASE_URL","API_KEY","getTrendingMovies","fetch","getMovieDetailes","getMovieCast","getSearchMovies","query"],"sourceRoot":""}